{"prompt": "Create a responsive weather app using DaisyUI. It should display the current weather in a card component, show a 5-day forecast using DaisyUI's grid and card components, include a navbar with a title and a theme toggle button, and use DaisyUI's btn class for buttons.", "completion": "import React, { useState } from 'react'; const WeatherApp: React.FC = () => { const [currentWeather, setCurrentWeather] = useState(null); const [forecast, setForecast] = useState([]); return (<div className='min-h-screen bg-base-200'><nav className='navbar bg-base-100 shadow-md mb-4'><div className='flex-1'><a className='btn btn-ghost normal-case text-xl'>WeatherApp</a></div><button className='btn btn-primary' onClick={() => document.documentElement.setAttribute('data-theme', 'dark')}>Toggle Theme</button></nav><div className='container mx-auto p-4'><div className='card bg-base-100 shadow-xl mb-4'>{currentWeather ? (<div className='card-body'><h2 className='card-title'>{currentWeather.date}</h2><p className='text-lg'>{currentWeather.temperature}°C</p><p>{currentWeather.description}</p></div>) : (<div className='card-body'><p>Loading current weather...</p></div>)}</div><div className='grid grid-cols-1 md:grid-cols-5 gap-4'>{forecast.map((data) => (<div key={data.date} className='card bg-base-100 shadow-md'><div className='card-body'><h2 className='card-title'>{data.date}</h2><p className='text-lg'>{data.temperature}°C</p><p>{data.description}</p></div></div>))}</div></div></div>); }; export default WeatherApp;"},
{"prompt": "Create a responsive navbar using DaisyUI with a site title, links for Home, About, and Contact, and a theme toggle button.", "completion": "import React from 'react'; const Navbar: React.FC = () => { return (<div className='navbar bg-base-100 shadow-md'><div className='flex-1'><a className='btn btn-ghost normal-case text-xl'>MySite</a></div><div className='flex-none'><ul className='menu menu-horizontal px-1'><li><a>Home</a></li><li><a>About</a></li><li><a>Contact</a></li></ul><button className='btn btn-primary ml-4' onClick={() => document.documentElement.setAttribute('data-theme', document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark')}>Toggle Theme</button></div></div>); }; export default Navbar;"},
{"prompt": "Create a to-do list app using DaisyUI. It should allow users to add tasks, mark them as completed, and delete them, with a styled input field, button, and list.", "completion": "import React, { useState } from 'react'; const TodoApp: React.FC = () => { const [tasks, setTasks] = useState([]); const [newTask, setNewTask] = useState(''); const addTask = () => { if (newTask.trim()) setTasks([...tasks, { text: newTask, completed: false }]); setNewTask(''); }; const toggleTask = (index) => { setTasks(tasks.map((task, i) => (i === index ? { ...task, completed: !task.completed } : task))); }; const deleteTask = (index) => { setTasks(tasks.filter((_, i) => i !== index)); }; return (<div className='min-h-screen bg-base-200 p-4'><div className='container mx-auto'><div className='form-control mb-4'><input type='text' placeholder='Add a task...' className='input input-bordered w-full' value={newTask} onChange={(e) => setNewTask(e.target.value)} /><button className='btn btn-primary mt-2' onClick={addTask}>Add Task</button></div><ul className='list-none'>{tasks.map((task, index) => (<li key={index} className={`flex justify-between items-center p-2 rounded ${task.completed ? 'bg-green-100' : 'bg-base-100'}`}><span className={task.completed ? 'line-through' : ''}>{task.text}</span><div><button className='btn btn-secondary btn-sm mr-2' onClick={() => toggleTask(index)}>Toggle</button><button className='btn btn-error btn-sm' onClick={() => deleteTask(index)}>Delete</button></div></li>))}</ul></div></div>); }; export default TodoApp;"},
{"prompt": "Build a responsive blog homepage using DaisyUI. It should feature a navbar, a hero section with a headline and call-to-action, and a grid layout of blog cards with titles, images, and excerpts.", "completion": "import React from 'react'; const BlogHomepage: React.FC = () => { const posts = [{ title: 'Post 1', image: 'https://via.placeholder.com/150', excerpt: 'This is the first post.' }, { title: 'Post 2', image: 'https://via.placeholder.com/150', excerpt: 'This is the second post.' }]; return (<div className='min-h-screen bg-base-200'><nav className='navbar bg-base-100 shadow-md'><div className='flex-1'><a className='btn btn-ghost normal-case text-xl'>BlogSite</a></div><div className='flex-none'><button className='btn btn-primary'>Subscribe</button></div></nav><div className='hero bg-base-300 text-center py-12'><h1 className='text-4xl font-bold mb-4'>Welcome to BlogSite</h1><button className='btn btn-primary'>Get Started</button></div><div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4'>{posts.map((post, index) => (<div key={index} className='card bg-base-100 shadow-md'><img src={post.image} alt={post.title} className='w-full h-48 object-cover' /><div className='card-body'><h2 className='card-title'>{post.title}</h2><p>{post.excerpt}</p><button className='btn btn-primary'>Read More</button></div></div>))}</div></div>); }; export default BlogHomepage;"}  